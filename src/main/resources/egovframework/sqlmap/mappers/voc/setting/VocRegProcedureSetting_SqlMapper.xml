<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.egov.voc.kspo.setting.dao.VocRegProcedureSettingDao">

    <resultMap type="com.egov.voc.kspo.setting.model.VocActivityVo" id="VocActivityVo">
        <result property="explanation"  column="EXPLANATION"  jdbcType="CLOB" javaType="java.lang.String" />
    </resultMap>

    <sql id="vocManagementCodeCols">
        MANAGEMENT_CD,
        TOP_CD,
        PRNTS_CD,
        TOP_COMN_CD,
        COMN_CD,
        ODRG,
        LVL,
        CODE_NM,
        USE_YN,
        REG_USR,
        REG_DT
    </sql>

    <select id="vocManagementCodeTree" resultType="com.egov.voc.kspo.setting.model.VocManagementCodeVo">
        select
            <include refid="vocManagementCodeCols"/>
        from
            voc_management_code
        where
            top_comn_cd = #{topComnCd}
            <!-- 단건의 분류코드 그룹 호출 시 -->
            <if test="comnCd instanceof String">
            and
            comn_cd = #{comnCd}
            </if>
            <!-- 여러개의 분류코드 그룹 호출 시 -->
            <if test="comnCd instanceof java.util.ArrayList">
            and
            comn_cd in
                <foreach collection="comnCd" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
            and
            prnts_cd is not null
        order by
            MANAGEMENT_CD
    </select>

    <select id="selectPrcdBas" resultType="com.egov.voc.kspo.setting.model.VocProcedureCodeVo">
        select
            *
        from
            voc_procedure_bas
        where
            prcd_seq = #{prcdSeq}
    </select>

    <select id="selectPrcdBasList" resultType="com.egov.voc.kspo.setting.model.VocProcedureCodeVo">
        select
            *
        from
            voc_procedure_bas
        where
            reg_use_yn = 'Y'
        order by
            prcd_seq
    </select>

    <select id="selectTaskBasList" resultType="com.egov.voc.kspo.setting.model.VocTaskCodeVo">
        select
            *
        from
            voc_task_bas
        where
            <if test="autoApplyAllYn != null and !autoApplyAllYn.equals('')">
                AUTO_APPLY_ALL_YN = #{autoApplyAllYn}
            </if>
            <if test="autoApplyPrcdSeq != null and !autoApplyPrcdSeq.equals('')">
                or
                AUTO_APPLY_PRCD_SEQ = #{autoApplyPrcdSeq}
            </if>
            <if test="mcPrcdSeq != null and !mcPrcdSeq.equals('')">
                task_seq not in (
                        select
                            task_seq
                        from
                            voc_task
                        where
                            mc_prcd_seq = #{mcPrcdSeq}
                )
            </if>
    </select>

    <select id="selectActivityFuncBasList" resultType="EzMap">
        select
            *
        from
            voc_activity_func_bas
        where
            func_cd not in (
                select
                    func_cd
                from
                    voc_activity
                where
                    mc_task_seq = #{mcTaskSeq}
            )
    </select>

    <select id="selectMaxMcPrcdSeq" resultType="String">
        select
            max(mc_prcd_seq)
        from
            voc_procedure
    </select>

    <select id="selectMaxMcTaskSeq" resultType="String">
        select
            max(mc_task_seq)
        from
            voc_task
    </select>

    <select id="selectMaxActSeq" resultType="String">
        select
            max(act_seq)
        from
            voc_activity
    </select>

    <select id="selectMaxDirCd" resultType="String">
        select
            max(dir_cd)
        from
            voc_dir_cd
    </select>

    <insert id="insertDirCd">
        insert into VOC_DIR_CD
            (DIR_CD)
        values
            (#{dirCd})
    </insert>

    <insert id="insertDirMcMapping">
        insert into VOC_DIR_MC_MAPPING
            (DIR_CD, MANAGEMENT_CD)
        values
            (#{dirCd}, #{managementCd})
    </insert>

    <insert id="insertDirOrgMapping">
        insert
        into voc_dir_org_mapping
        (DIR_CD, PRIMARY_ORG_YN, ORG_ID)
        values
        (#{dirCd}, #{primaryOrgYn}, #{orgId})
    </insert>

    <insert id="insertProcedure">
        insert into voc_procedure
        (MC_PRCD_SEQ, PRNTS_SEQ, PRCD_SEQ, PRCD_NM, DEADLINE, DUTY_ORG, DUTY_EMP, DUTY_ROLE, REG_USR)
        values
        (
            #{mcPrcdSeq},
            #{prntsSeq},
            #{prcdSeq},
            (select prcd_nm from voc_procedure_bas where prcd_seq = #{prcdSeq}),
            (select deadline from voc_procedure_bas where prcd_seq = #{prcdSeq}),
            #{dutyOrg},
            (select duty_emp from voc_procedure_bas where prcd_seq = #{prcdSeq}),
            (select duty_role from voc_procedure_bas where prcd_seq = #{prcdSeq}),
            #{loginUsr}
        )
    </insert>

    <update id="insertProcedureDirConn">
        insert all
        <foreach collection="mcPrcdSeqList" item="mcPrcdSeq" separator=" ">
            into voc_procedure_dir_conn
            (DIR_CD, MC_PRCD_SEQ)
            values(
                   #{dirCd}, #{mcPrcdSeq}
            )
        </foreach>
        select * from dual
    </update>

    <select id="selectDirCd" resultType="string">
        select
            dir_cd
        from
            voc_dir_mc_mapping
        where
            <if test="managementCd != null and !managementCd.equals('')">
                management_cd = #{managementCd}
            </if>
    </select>

    <select id="selectProcedure" resultType="com.egov.voc.kspo.setting.model.VocProcedureVo">
        select
            *
        from
            voc_procedure
        <where>
            <if test="mcPrcdSeq != null and !mcPrcdSeq.equals('')">
                mc_prcd_seq = #{mcPrcdSeq}
            </if>
        </where>
    </select>

    <select id="selectProcedureList" resultType="com.egov.voc.kspo.setting.model.VocProcedureVo">
        select
            mc_prcd_seq,
            prnts_seq,
            prcd_seq,
            prcd_nm,
            deadline,
            duty_org,
            duty_emp,
            nvl(duty_role, '-') dutyRole,
            reg_usr,
            reg_dt,
            (select task_yn from voc_procedure_bas where prcd_seq = vp.prcd_seq) taskYn
        from
            voc_procedure vp
        where
            vp.mc_prcd_seq in (
                    select
                        mc_prcd_seq
                    from
                        voc_procedure_dir_conn
                    where
                        dir_cd = #{dirCd}
                )
        order by
            3
    </select>

    <select id="selectTaskList" resultType="com.egov.voc.kspo.setting.model.VocTaskVo">
        select
            mc_task_seq,
            mc_prcd_seq,
            task_seq,
            task_nm,
            odrg,
            deadline,
            duty_org,
            duty_emp,
            duty_role,
            reg_usr,
            reg_dt
        from
            voc_task
        <where>
            <if test="mcPrcdSeq != null and !mcPrcdSeq.equals('')">
                mc_prcd_seq = #{mcPrcdSeq}
            </if>
        </where>
        order by
            odrg
    </select>

    <select id="selectActivityList" resultMap="VocActivityVo">
        select
            act_seq,
            mc_task_seq,
            func_cd,
            act_nm,
            explanation
        from
            voc_activity
        <where>
            <if test="mcTaskSeq != null and !mcTaskSeq.equals('')">
                mc_task_seq = #{mcTaskSeq}
            </if>
        </where>
        order by
            1
    </select>

    <select id="selectDutyOrgList" resultType="EzMap">
        select
            *
        from
            voc_dir_org_mapping
        where
            dir_cd = #{dirCd}
        order by
            2 desc, 3
    </select>

    <delete id="deleteDirOrg">
        delete from voc_dir_org_mapping
        where
            dir_cd = #{dirCd}
            and
            <if test="orgList != null and !orgList.isEmpty()">
                org_id in
                <foreach collection="orgList" item="org" separator="," open="(" close=")">
                    #{org.orgId}
                </foreach>
            </if>
    </delete>

    <update id="updateDirOrg">
        <foreach collection="orgList" item="org" separator=";" open="DECLARE BEGIN" close="; END;">
            update voc_dir_org_mapping
            set
                primary_org_yn = #{org.primaryOrgYn}
            where
                dir_cd = #{dirCd}
                and
                org_id = #{org.orgId}
        </foreach>
    </update>

    <insert id="insertTask">
        insert into voc_task
        (MC_TASK_SEQ, MC_PRCD_SEQ, TASK_SEQ, ODRG, TASK_NM, DEADLINE, DUTY_ORG, DUTY_EMP, DUTY_ROLE, REG_USR)
        values
            (
                #{mcTaskSeq},
                #{mcPrcdSeq},
                #{taskSeq},
                #{odrg},
                #{taskNm},
                #{deadline},
                #{dutyOrg},
                #{dutyEmp},
                #{dutoRole},
                #{loginUsr}
            )
    </insert>

    <insert id="insertActivity">
        insert into voc_activity
        (ACT_SEQ, MC_TASK_SEQ, FUNC_CD, ACT_NM, EXPLANATION)
        values(
               #{actSeq},
               #{mcTaskSeq},
               #{funcCd},
               #{actNm},
               #{explanation}
              )
    </insert>

    <delete id="deleteActivity">
        delete from voc_activity
        where
            act_seq in
            <foreach collection="actList" item="act" open="(" close=")" separator=",">
                #{act.actSeq}
            </foreach>
    </delete>

    <delete id="deleteTask">
        delete from voc_task
        where
            mc_task_seq in
            <foreach collection="taskList" item="task" open="(" close=")" separator=",">
                #{task.mcTaskSeq}
            </foreach>
    </delete>

    <delete id="deleteProcedure">
        delete from voc_procedure
        where
            mc_prcd_seq in
            <foreach collection="prcdList" item="prcd" open="(" close=")" separator=",">
                #{prcd.mcPrcdSeq}
            </foreach>
    </delete>

    <update id="updateProcedure">
        update voc_procedure
        set
            prnts_seq = #{prntsSeq},
            deadline = #{deadline},
            duty_org = #{dutyOrg},
            duty_emp = #{dutyEmp},
            duty_role = #{dutyRole}
        where
            mc_prcd_seq = #{mcPrcdSeq}
    </update>
</mapper>
